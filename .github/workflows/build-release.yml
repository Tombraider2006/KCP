name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Запускается при создании тега версии (например, v1.5.0)

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: '*.AppImage'
            asset_name_pattern: 'linux'
          - os: macos-latest
            artifact_name: '*.dmg'
            asset_name_pattern: 'mac'
          - os: windows-latest
            artifact_name: '*.exe'
            asset_name_pattern: 'windows'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build for Linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name_pattern }}-build
          path: dist-electron/${{ matrix.artifact_name }}
          retention-days: 1

  release:
    name: Upload to Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      
      - name: Display structure of downloaded files
        run: ls -R ./artifacts
      
      - name: Prepare release files
        run: |
          mkdir -p ./release-files
          find ./artifacts/linux-build -name "*.AppImage" ! -name "*.blockmap" -exec cp {} ./release-files/ \;
          find ./artifacts/mac-build -name "*.dmg" ! -name "*.blockmap" -exec cp {} ./release-files/ \;
          find ./artifacts/windows-build -name "*Setup*.exe" ! -name "*.blockmap" -exec cp {} ./release-files/ \;
          ls -lh ./release-files
      
      - name: Upload files to existing release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release-files/*
          draft: false
          prerelease: false
          fail_on_unmatched_files: false
          token: ${{ secrets.GITHUB_TOKEN }}

